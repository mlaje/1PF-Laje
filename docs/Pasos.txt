Repositorio GitHub
https://github.com/mlaje/1PF-Laje.git


Pasos Generación del proyecto de la primera entrega

- Crear Proyecto
> ng new 1PF-Laje --no-standalone
Stylesheet format: SCSS
SSR: No

- Abrir el código con VS Code
> cd 1PF-Laje
> code .


- Instalar Angular Material
> ng add @angular/material
(17.1.0)
Theme: Custom
Angular Material typography styles: Yes
Include and enable animations: Yes


- Probar aplicación base
> ng serve -o
Tal como está no funciona => editar styles.scss (quitando las ocurrencias del string dentro del archivo "1PF-Laje-")
Ahora sí funciona
Vaciar archivo app.component.html


- Desarrollar Layout Administrativo
 
Crear carpeta src/app/layouts
Crear carpeta src/app/layouts/auth
Crear carpeta src/app/layouts/dashboard
Crear carpeta docs con archivo Pasos.txt donde se encuentra este archivo

agregar docs/modules.drawio 
agregar docs/structure.drawio

- Generar módulo dashboard dentro de la carpeta layouts/dashboard/
> ng g module layouts/dashboard

- Generar módulo auth dentro de la carpeta layouts/auth/
> ng g module layouts/auth

- Generar dashboard component
> ng g component layouts/dashboard

- Quitar archivo dashboard.component.spec.ts


- Importar el DashboardModule para usar el DashboardComponent en el el app.component.html
    
    dashboard.module.ts:
        exports: [
            DashboardComponent
        ]

    app.module.ts:
        import { DashboardModule } from './layouts/dashboard/dashboard.module';

        imports: [
            ...
            DashboardModule ]

    Si queremos utilizar un componente DashboardComponent fuera su módulo, por ejemplo en el app.component.html,
    hay que importar el módulo DashboardModule (en el archivo app.module.ts) y exportar el DashboardComponent
    (desde el archivo DashboardModule)

    El app.module.ts importa el DashboardModule, y este módulo a su vez exporta el DashboardComponent

- agregar sidenav de angular material (dentro del dashboard component)
    En DashboardModule:
    import {MatSidenavModule} from '@angular/material/sidenav'; 

    imports: [
        .., MatSidenavModule ]

    en DashboardComponent.html:

        agregar código HTML de ejemplo de angular material sidenav

    en DashboardComponent.ts
        agregar el showFiller = false

        export class DashboardComponent {
            showFiller = false;
        }

    En dashboard.component.scss poner estilos

- agregar button de angular material (dentro del dashboard component)
    En DashboardModule:
    import {MatButtonModule} from '@angular/material/button'; 

    imports: [
        .., MatButtonModule ]

    
- agregar toolbar de angular material (dentro del dashboard component)
    En DashboardModule:
     import {MatToolbarModule} from '@angular/material/toolbar'; 

    imports: [
        .., MatToolbarModule ]

    en DashboardComponent.html:

        agregar código HTML dentro del div class="dashboard-sidenav-content"

   
- El toolbar no funciona si no se agregan el mat-Icon (se agrega). Se agrega el mat-icon
    En DashboardModule:
    import {MatIconModule} from '@angular/material/icon'; 

     imports: [
        .., MatIconModule ]

    Cada vez que se quiere usar un componente, se debe importar el modulo que lo contiene

- Sacar el boton de Toggle sidenav (para que lo haga el icono de menu del toolbar)

- Generar modulos (Students, Users, Courses, Enrollment, etc...) (IMPORTANTE: para esta entrega solo el de Students)
> ng g module layouts/dashboard/pages/students

- Generar componente Students
> ng g component layouts/dashboard/pages/students --skip-tests 

- Exportar el StudentsComponent en el Students.module.ts:
    ...
    exports: [
        StudentsComponent
    ],

 - En el DashboardModule importar el StudentsModule
    import { StudentsModule } from './pages/students/students.module';

    imports: [ ..
        StudentsModule]

- Cargar listas en variables string[] en students.component.ts, que van a ser utilizadas en combos (paises, rubros, generos, etc) 

- agregar el componente de students <app-students></app-students> en dashboard.component.html

- agregar Table de angular material (dentro del students component)
    En StudentsModule:
    import {MatTableModule} from '@angular/material/table'; 
    
    imports: [
    ...
    MatTableModule]

- Editar el students.component.html con una tabla de angular material de ejemplo

- Instalar PrimeFlex
    > npm install primeFlex

- Editar angular.json 
    agregar en "styles" :
          "node_modules/primeflex/primeflex.min.css",  

- Crear directorios models y components dentro de directorio Students 

- Definir dentro de la carpeta models el index.ts

    export interface Student {
        ...
    }

- En students.component.ts poner el estudiantes de ejemplo en dataSource y displayedcolumns (que vienen en el html de arriba referenciados)
    import { Student } from './models';

    displayedColumns: string[] = ['position', 'name', 'weight', 'symbol'];
    dataSource: Student[] = ...;

- Editar el StudentsComponent html con las columnas de la tabla de alumnos

- generar component student-form en layouts/dashboard/pages/students/components/
> ng g component layouts/dashboard/pages/students/components/student-form --skip-tests

- En students.module.ts

    import { MatFormFieldModule } from '@angular/material/form-field'; // input wrapper
    import { MatInputModule } from '@angular/material/input'; // input
    import {MatSelectModule} from '@angular/material/select'; // select
    import {MatButtonModule} from '@angular/material/button'; // button

    imports : [
        ...,
        MatFormFieldModule,
        MatInputModule,
        MatSelectModule,
        MatButtonModule
    ];
     
- agregar al student-form.component.ts
    export class StudentFormComponent {
    userForm: FormGroup ; 

    constructor(private fb: FormBuilder) {
        this.userForm = this.fb.group(
        {
            firstName: this.fb.control(''), ....


- Para trabajar con los formularios de angular, importar en Students.module.ts el ReactiveFormsModule 
    import { ReactiveFormsModule } from '@angular/forms';
    imports: [
        ...
        ReactiveFormsModule]

- vincular el typescript con el html. En student-form.component.html  
    agregar el formGroup y vincularla con la variable userForm
    agregar los formControlName  

- En student-form.component.ts agregar el onSubmit()

- agregar en StudentFormComponent.html (ngSubmit)="onSubmit()"

- Cuando hacemos Guardar, queremos pushear el valor del formulario student-form (hijo) a la tabla de students.form (padre)

- En student-form.component agregar:
    import { ... , EventEmitter, Output} from '@angular/core';

    @Output() 
    userSubmitted = new EventEmitter();

- agregar en el padre (student component.ts)
    onUserSubmitted(ev: Student): void {
        //this.dataSource.push(ev); //no anda porque angular material necesita que se recree el array
     this.dataSource = [...this.dataSource,  {...ev, id: new Date().getTime()}];
    }

- en StudentFormComponent 
    <div class="mb-3">
        <app-student-form (userSubmitted)="onUserSubmitted($event)"></app-student-form>
    </div>

- editar los colores de la paleta 

- agregar pipe date en el campo birthdate del archivo sudents.component.html
    {{student.birthDate | date:"..formato.."}} 

- editar el app.module.ts con el imports del LOCALE_ID:
    import { registerLocaleData } from '@angular/common';
    import es from '@angular/common/locales/es';
    registerLocaleData(es);

    providers: [
        {
        provide: LOCALE_ID ,
        useValue: 'es-AR'
        }
    ]

- Agregar atributo phone del alumno (form, interfaz, tabla, campos desplegados, etc)

- Hacer custom pipe 
    > ng g module layouts/dashboard/pages/pipes
    > ng g component layouts/dashboard/pages/pipes --skip-tests
    > ng g module shared 
    > ng g pipe shared/full-name
   
    Importar el     PipesModule en el DashboardModule
 
    En el PipesModule exportar el PipesComponent

     exports : [  
        PipesComponent
        ]


- En pipes.module.ts

    import { SharedModule } from '../../../../shared/shared.module';

    imports: [
        ...
        SharedModule]

- pipe edad (descartada por el momento, falta que la fecha cargada sea un date cuando se agrega)
> ng g pipe shared/edad     

- directivas personalizadas
> ng g d shared/size --skip-tests
